      requires_s_3:
        description: "Does this workflow require S3?"
        required: true
      requires_ec_2:
        description: "Does this workflow require EC2?"
        required: true
      ttl:
        description: "Time to live (TTL) for the environment"
        required: true
      prefix:
        description: "prefix"
        required: false
      EC2_Size:
        description: "EC2_Size"
        required: false
      triggered_by:
        description: "triggered_by"
        required: false
      runId:
        description: "runId"
        required: false
      project:
        description: "project"
        required: false
      project_id:
        description: "project_identifier"
        required: false


    - name: Print inputs
      run: |
        python .github/workflows/create_environment.py print_inputs \
          --port_context '${{ github.event.inputs.port_context }}' \
          --requires_s3 '${{ github.event.inputs.requires_s3 }}' \
          --requires_ec2 '${{ github.event.inputs.requires_ec2 }}' \
          --project '${{ github.event.inputs.project }}' \
          --ttl '${{ github.event.inputs.ttl }}' \
          --all '${{ github.event.inputs.port_context }}'

    - name: Get token
      id: get_token
      run: |
        TOKEN=$(python create_environment.py get_token \
          --client_id "${{ secrets.PORT_CLIENT_ID }}" \
          --client_secret "${{ secrets.PORT_CLIENT_SECRET }}")
        echo "PORT_TOKEN=$TOKEN" >> $GITHUB_ENV

    - name: Create environment
      run: |
        python create_environment.py create_environment \
          --project '${{ github.event.inputs.project }}' \
          --token "${{ env.PORT_TOKEN }}"

    - name: Create S3 resource (if required)
      if: ${{ github.event.inputs.requires_s3 == 'true' }}
      run: |
        python create_environment.py create_cloud_resource \
          --project '${{ github.event.inputs.project }}' \
          --resource_type 's3' \
          --token "${{ env.PORT_TOKEN }}"

    - name: Create EC2 resource (if required)
      if: ${{ github.event.inputs.requires_ec2 == 'true' }}
      run: |
        python create_environment.py create_cloud_resource \
          --project '${{ github.event.inputs.project }}' \
          --resource_type 'ec2' \
          --token "${{ env.PORT_TOKEN }}"

    - name: Create S3 resource (if required)
      run: |
        python .github/workflows/create_environment.py create_cloud_resource \
          --requires_s3 '${{ github.event.inputs.project_id }}' \
          --requires_ec2 '${{ env.PORT_TOKEN }}' \
          --project '${{ github.event.inputs.ttl }}' \
          --token '${{ github.event.inputs.triggered_by }}'
        python .github/workflows/create_environment.py post_log \
          --message 'âœ… Environment successfully created! ðŸ¥³ Ready to deploy ðŸš€' \
          --token '${{ env.PORT_TOKEN }}' \
          --run_id '${{ github.event.inputs.runId }}'
        

    - name: Create environment
      run: |
        python .github/workflows/create_environment.py create_environment \
          --project '${{ github.event.inputs.project_id }}' \
          --token '${{ env.PORT_TOKEN }}' \
          --ttl '${{ github.event.inputs.ttl }}' \
          --triggered_by '${{ github.event.inputs.triggered_by }}'
        python .github/workflows/create_environment.py post_log \
          --message 'âœ… Environment successfully created! ðŸ¥³ Ready to deploy ðŸš€' \
          --token '${{ env.PORT_TOKEN }}' \
          --run_id '${{ github.event.inputs.runId }}'